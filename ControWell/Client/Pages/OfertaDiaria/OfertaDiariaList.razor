@page "/ofertadiarialist"
@using ControWell.Client.Services.OfertaDiariaService;
@using ControWell.Shared
@using System.Net.Http.Json
@using MatBlazor
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IOfertaDiariaService OfertaDiariaService
@inject SweetAlertService Swal

@*ALERTA*@
<MatSnackbar @bind-IsOpen="@snackBarIsOpen" Leading="true">
    <MatSnackbarContent>No hay programaciones asociadas a esta fecha </MatSnackbarContent>
    <MatSnackbarActions>
        <MatButton Raised="true">Ok</MatButton>
    </MatSnackbarActions>
</MatSnackbar>

@*TABLA PROGRAMACION DIARIA*@
<div style="width:100%;display: flex; justify-content:center; align-items:center; margin-top:15px;">
    <div>
        <button class="btn btn-success" id="btn-nuevo-ofertaDiaria" @onclick="EviarOfertaDiaria">Nueva Programación</button>
        <MatDatePicker @bind-Value="FeaturesDateTime" Label="Fecha relacionada" Outlined="true" Minimum="@DateTime.Now.AddDays(-10)"></MatDatePicker>
    </div>
</div>
<div class="table-container-scroll">
    <table class="table" style="width:200%">
    <thead>
        <tr>
            <th style="width:6%; text-align:center">Id</th>
            <th style="width:35%; text-align:center">EMPRESA TRANSPORTADORA</th>
            <th style="width:15%; text-align:center">PLACA</th>
            <th style="width:15%; text-align:center">TANQUE</th>
            <th style="width:40%; text-align:center">NOMBRE CONDUCTOR</th>
            <th style="width:15%; text-align:center">CEDULA</th>
            <th style="width:25%; text-align:center">CODIGO RUTA</th>
            <th style="width:35%; text-align:center">ORIGEN</th>
            <th style="width:25%; text-align:center">DESTINO</th>
            <th style="width:25%; text-align:center">OBSERVACION</th>
            <th style="width:20%; text-align:center"></th>

        </tr>
    </thead>
    <tbody>
        @foreach (var OfertaDiaria in OfertaDiarias)
        {
@*                @if (OfertaDiaria.CreatedAt.ToString("dd/MM/yyyy") == FeaturesDateTime)*@
           @if (OfertaDiaria.CreatedAt == FeaturesDateTime)
           {
             <tr>
               @if(OfertaDiaria.disponible == disponible){
                 <td style="color:red;">@OfertaDiaria.Id</td>
               }else{
                 <td>@OfertaDiaria.Id</td>
               }
               @if(OfertaDiaria.disponible == disponible){
                  <td style="color:red" disabled>@OfertaDiaria.EmpresaTransportadora</td>
               }else{
                 @if(update == true && OfertaDiaria.Id == id){<td><input @bind-value="@OfertaDiaria.EmpresaTransportadora" /></td>}else{<td>@OfertaDiaria.EmpresaTransportadora</td>}
               }             
               @if(OfertaDiaria.disponible == disponible){
                  <td style="color:red; text-align:center" disabled>@OfertaDiaria.Placa</td>
               }else{
                 @if(update == true && OfertaDiaria.Id == id){<td><input @bind-value="@OfertaDiaria.Placa" /></td>}else{<td style="text-align:center">@OfertaDiaria.Placa</td>}
               }   
               @if(OfertaDiaria.disponible == disponible){
                 <td style="color:red; text-align:center" disabled>@OfertaDiaria.Tanque</td>
               }else{
                 @if(update == true && OfertaDiaria.Id == id){<td><input @bind-value="@OfertaDiaria.Tanque" /></td>}else{<td style="text-align:center">@OfertaDiaria.Tanque</td>}
               }
               @if(OfertaDiaria.disponible == disponible){
                 <td style="color:red;" disabled>@OfertaDiaria.NombreConductor</td>
               }else{
                 @if(update == true && OfertaDiaria.Id == id){<td><input @bind-value="@OfertaDiaria.NombreConductor" /></td>}else{<td>@OfertaDiaria.NombreConductor</td>}
               }
               @if(OfertaDiaria.disponible == disponible){
                 <td style="color:red; text-align:center" disabled>@OfertaDiaria.Cedula</td>
               }else{
                 @if(update == true && OfertaDiaria.Id == id){<td><input @bind-value="@OfertaDiaria.Cedula" /></td>}else{<td style="text-align:center">@OfertaDiaria.Cedula</td>}
               }  
               @if(OfertaDiaria.disponible == disponible){
                 <td style="color:red; text-align:center" disabled>@OfertaDiaria.CodigoRuta</td>
               }else{
                 @if(update == true && OfertaDiaria.Id == id){<td><input @bind-value="@OfertaDiaria.CodigoRuta" /></td>}else{<td style="text-align:center">@OfertaDiaria.CodigoRuta</td>}
               }  
               @if(OfertaDiaria.disponible == disponible){
                 <td style="color:red; text-align: center" disabled>@OfertaDiaria.Origen</td>
               }else{
                 @if (update == true && OfertaDiaria.Id == id){<td><input @bind-value="@OfertaDiaria.Origen" /></td>}else{ <td style="text-align:center">@OfertaDiaria.Origen</td>}
               }  
               @if(OfertaDiaria.disponible == disponible){
                 <td style="color:red; text-align:center" disabled>@OfertaDiaria.Destino</td>
               }else{
                 @if(update == true && OfertaDiaria.Id == id){<td><input @bind-value="@OfertaDiaria.Destino" /></td>}else{<td style="text-align:center">@OfertaDiaria.Destino</td>}
               }
               @if(OfertaDiaria.disponible == disponible){
                 <td style="color:red; text-align:center" disabled>@OfertaDiaria.Observacion</td>
               }else{
                 @if(update == true && OfertaDiaria.Id == id){<td><input @bind-value="@OfertaDiaria.Observacion" /></td>}else{<td style="text-align:center">@OfertaDiaria.Observacion</td>}
               }

                <td>
                  @if(update == true && OfertaDiaria.Id == id ){
                    <button type="submit" class="btn btn-info" data-toggle="tooltip" title="Save" @onclick="(()=>UpdateOfertaDiaria(OfertaDiaria))">
                                <i style="position:initial" class="fa-solid fa-circle-check"></i>
                    </button>
                    <button class="btn btn-danger" @onclick="Cancelar" data-toggle="tooltip" title="Cancel">
                                <i style="position:initial" class="fa-solid fa-ban"></i>
                    </button>
                  }else{
                    <button class="btn btn-primary" data-toggle="tooltip" title="Update" @onclick="(()=> updatedatarow(OfertaDiaria.Id))"><i style="position:initial" class="oi oi-pencil"></i></button>
                     <button class="btn btn-warning" data-toggle="tooltip" title="Delete" @onclick="(()=>  DeleteOfertaDiaria(OfertaDiaria.Id))"><i style="position:initial" class="oi oi-trash"></i></button>
                  }
                </td>
                    </tr>

                   }
           else
           {
              @if (OfertaDiaria.CreatedAt != FeaturesDateTime)
                {
                  snackBarIsOpen = true; 
                } 
            }
        }
    </tbody>
</table>
</div>

@*Loading database*@
@if (OfertaDiariasState == false)
{
    <div id="db-spinner">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}

<style>

 body{
   font-family: Arial;
  }

  input {
    border-radius: 5px;
    background-color: #f7fafc;
    width: 90%;
    height: 40px;
    border: 0.5px dashed blue;

  }
/* estilos de la tabla */
    .table-container-scroll {
        overflow: scroll;
        height: 450px;
        width: auto;
        margin-top: 10px;
        margin-bottom: 5px;
        border-radius: 5px;
    }

    table {
        background-color: white;
        text-align: left;
        border-collapse: collapse;
        table-layout: fixed;
        width: 100%;
    }

    th {
        position: relative;
    }

    th, td{
        padding: 10px;
        margin-left: 40px;
    }

    thead{
        background-color: #388e3c;
        border-bottom: solid 3px #0F362D;
        color: #eeeeee;
        position: sticky;
        top: 0px;

    }

    tr:nth-child(even){
        background-color: #ddd;
    }

    tr:hover td{
       background-color: rgba(100, 176, 161, 0.8);
       /*background-color: #369681;*/
       color: #eeeeee;
    }

    #btn-nuevo-ofertaDiaria{
        margin-left:10px;
        margin-right: 150px;
        height: 45px;
        color:aliceblue;
    }

 /* estilos formulario agregar ofertaDiaria*/
 .create-ofertaDiaria-container{
       position: absolute;
       top: 55px;
       left: 250px;
       padding: 12px;
       width: 1110px;
       height: 570px;
       display: flex;
       justify-content: center;
       align-items: center;
       background: rgba(0, 0, 0, 0.45);
 }

 .add-ofertaDiaria-card{
      width: 280px;
      height: 400px;
      display: flex;
      justify-content: center;
      align-items: center;
      background: rgba(223, 230, 233,1.0);
      border-radius: 8px;
      color: rgba(0, 0, 0,1.0);
      box-shadow: 0 4px 8px rgba(0,0,0,0.45);

   }

 .add-ofertaDiaria-card label {
     margin-bottom: 5px;
     margin-top: 6px;
 }
 .button-group {
    display: flex;
    justify-content: space-between;
    align-items: center;
 }

 #db-spinner {
           position: absolute;
           top: 55px;
           left: 250px;
           padding: 12px;
           width: 1110px;
           height: 570px;
           display: flex;
           justify-content: center;
           align-items: center;
 }

</style>
@code {

    Boolean state = false;
    Boolean update = false;
    int id;
    string disponible = "0";
    Boolean OfertaDiariasState = false;
    Boolean snackBarIsOpen = false;

    DateTime FeaturesDateTime = DateTime.Today;

    string FeaturesDateTimestring = "";

    string FechaActual = (DateTime.Now).ToString("dd/MM/yyyy");
    //string FechaActualtest = FeaturesDateTime.ToString("MM/dd/yyyy");


    string empresaTransportadora = "";
    string placa = "";
    string tanque = "";
    string nombreConductor = "";
    string cedula = "";
    string codigoRuta = "";
    string origen = "";
    string destino = "";
    string observacion = "";
    string fechaCreacion = "";
    DateTime createdAt ;


    public static List<OfertaDiaria> OfertaDiarias = new List<OfertaDiaria>();

    protected override async Task OnInitializedAsync()
    {
        FeaturesDateTime = DateTime.Today;
        Console.WriteLine("fecha seleccionada:", FeaturesDateTime);

        var resultado = await Http.GetFromJsonAsync<List<OfertaDiaria>>("api/ofertaDiaria");
        if (resultado != null)
            OfertaDiarias = resultado;
        OfertaDiariasState = true;
    }

    [Parameter]

    public int? Id { get; set; }

    OfertaDiaria ofertaDiaria = new OfertaDiaria();

    async Task EviarOfertaDiaria()
    {
        try
        {
            ofertaDiaria.EmpresaTransportadora = "";
            ofertaDiaria.Placa = "";
            ofertaDiaria.Tanque = "";
            ofertaDiaria.NombreConductor= "";
            ofertaDiaria.Cedula="";
            ofertaDiaria.CodigoRuta = "";
            ofertaDiaria.Origen = "";
            ofertaDiaria.Destino = "";
            ofertaDiaria.Observacion = "";
            ofertaDiaria.FechaCreacion = FechaActual;
            ofertaDiaria.CreatedAt = FeaturesDateTime;

            await OfertaDiariaService.CreateOfertaDiaria(ofertaDiaria);
            await  OnInitializedAsync();
            NavigationManager.NavigateTo("/");
            NavigationManager.NavigateTo("/ofertaDiarialist");


        }
        catch (InvalidCastException e)
        {
            Console.WriteLine(e);

            state = false;
            NavigationManager.NavigateTo("/");
            NavigationManager.NavigateTo("/ofertaDiarialist");
        }
        finally
        {
            state = false;
            NavigationManager.NavigateTo("/");
            NavigationManager.NavigateTo("/ofertaDiarialist");
        }
    }

    async Task DeleteOfertaDiaria(int _id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar",
                Text = "¿ Estas seguro que deseas eliminar ?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Eliminar",
                CancelButtonText = "Cancelar"
            });

        var confirmado = !string.IsNullOrEmpty(resultado.Value);

        if(!confirmado)
        {
            //context.PreventNavigation();
        }else
        {           
            await OfertaDiariaService.DeleteOfertaDiaria(_id);
            NavigationManager.NavigateTo("/");
            NavigationManager.NavigateTo("/ofertaDiarialist");
        }
    }

    async Task UpdateOfertaDiaria(OfertaDiaria ofertaDiaria)
    {
        ofertaDiaria.EmpresaTransportadora = ofertaDiaria.EmpresaTransportadora;
        ofertaDiaria.Placa = ofertaDiaria.Placa;
        ofertaDiaria.Tanque = ofertaDiaria.Tanque;
        ofertaDiaria.Cedula = ofertaDiaria.Cedula;
        ofertaDiaria.CodigoRuta = ofertaDiaria.CodigoRuta;
        ofertaDiaria.Origen = ofertaDiaria.Origen;
        ofertaDiaria.Destino = ofertaDiaria.Destino;
        ofertaDiaria.Observacion = ofertaDiaria.Observacion;
        ofertaDiaria.CreatedAt = ofertaDiaria.CreatedAt;
        ofertaDiaria.FechaCreacion = ofertaDiaria.FechaCreacion;
        ofertaDiaria.disponible = ofertaDiaria.disponible;

        await OfertaDiariaService.UpdateOfertaDiaria(ofertaDiaria);
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Success",
                Text = "Actualizado correctamente",
                Icon = SweetAlertIcon.Success,
            });

        await OnInitializedAsync();

        NavigationManager.NavigateTo("/");
        NavigationManager.NavigateTo("/ofertaDiarialist");
    }

    void updatedatarow(int _id)
    {
        update = true;
        id = _id;
    }

    void Cancelar()
    {
        state = false;
        update = false;
    }

    void NevegarVariablesLista()
    {
        //NanigationManager.NavigateTo("/crearofertaDiaria");
        state = true;
    }
    void MostrarUnOfertaDiaria(int id)
    {
        NavigationManager.NavigateTo($"singleOfertaDiaria/{id}");
    }
}

