@page "/crearregistro"
@using ControWell.Client.Services.RegistroService;
@using ControWell.Client.Services.PozoService;
@using ControWell.Client.Services.VariableProcesoService;
@inject HttpClient Http
@inject NavigationManager NanigationManager
@inject IRegistroService RegistroService
@using ControWell.Shared
@using System.Net.Http.Json

<h3>CrearVariableProceso</h3>

<EditForm Model="registro" OnSubmit="EnviarRegistro">
    <label>Pozo</label>
      <InputSelect @bind-Value="registro.PozoId" class="form-select">
        @foreach (var pozo in Pozos)
        {
                    <option value="@pozo.Id">@pozo.NombrePozo</option>
        }

   </InputSelect>
   <label>Variable</label>
  <InputSelect @bind-Value="registro.VariableProcesoId" class="form-select">
        @foreach (var variableProceso in Variables)
        {
                    <option value="@variableProceso.Id">@variableProceso.Nombre en @variableProceso.Unidad</option>
        }

   </InputSelect>






    <div>
        <label for="">Fecha</label>
        <InputDate id="fecha" @bind-Value="registro.FechaHora" class="form-control"></InputDate>
        
    </div>
    <div>
        <label for="">Medida</label>
        <InputNumber id="medida" @bind-Value="registro.Medida" class="form-control"></InputNumber>
    </div>
 
<br />

    <button type="submit" class="btn btn-primary">Confirmar</button>
    <button class="btn btn-outline-warning" @onclick="VolverAnterior">Volver</button>
    <br />
    <br />
</EditForm>



@code {
    [Parameter]

    public int? Id { get; set; }

    Registro registro = new Registro();
    VariableProceso variable = new VariableProceso();

    Pozo pozo = new Pozo();

    public static List<VariableProceso> Variables = new List<VariableProceso>();

    public static List<Pozo> Pozos = new List<Pozo>();
    public static List<Registro> Registros = new List<Registro>();

    protected override async Task OnInitializedAsync()
    {
        var mivariable = await Http.GetFromJsonAsync<List<VariableProceso>>("api/VariableProceso");
        if (mivariable != null)
            Variables = mivariable;


        var mipozo = await Http.GetFromJsonAsync<List<Pozo>>("api/Pozo");
        if (mipozo != null)
            Pozos = mipozo;

        var miregistro = await Http.GetFromJsonAsync<List<Registro>>("api/Registro");
        if (miregistro != null)
            Registros = miregistro;
    }
  


    async Task EnviarRegistro()
    {
        await RegistroService.CreateRegistro(registro);

    }

    void VolverAnterior()
    {
        NanigationManager.NavigateTo("/registrolist");
    }
}