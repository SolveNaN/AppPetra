@page "/consultaregistros"
@using ControWell.Client.Services.RegistroService;
@using ControWell.Client.Services.PozoService;
@using ControWell.Client.Services.VariableProcesoService;
@inject HttpClient Http
@inject NavigationManager NanigationManager
@inject IRegistroService RegistroService
@using ControWell.Shared
@using System.Net.Http.Json
@using System.Linq
@using SpreadsheetLight;
@using System.Data;
@using ClosedXML.Excel;
<h3>Consutas</h3>
<h3>Pozos registrados por variable</h3>
<EditForm Model="registro" OnSubmit="EnviarRegistro">
    <label>Pozo</label>
    <InputSelect @bind-Value="registro.PozoId" class="form-select">
        @foreach (var pozo in Pozos)
        {
            <option value="@pozo.Id">@pozo.NombrePozo</option>
        }

    </InputSelect>

    <table class="table">
        <thead>
            <tr>
                <th>Fecha y hora</th>                
                <th>Variable</th>
                <th>Medida</th>
                <th>Unidad</th>
            </tr>
        </thead>
        <tbody>
                @foreach (var r in Registros)
                    {
                @if (registro.PozoId == r.PozoId)
                {
                    <tr>
                        <td>@r.FechaHora</td>                        
                        <td>@r.VariableProceso.Nombre</td>
                        <td>@r.Medida</td>
                        <td>@r.VariableProceso.Unidad</td>
                        
                    </tr>
                }
                
                    }
           
        </tbody>
    </table>


</EditForm>
<EditForm Model="registroFiltro" class="row mt-4">
    <div class="col-12">
        <div class="card shadow-sm">
            <div class="card-header">
                <h5>Consultar y Exportar</h5>
            </div>

            <div class="card-body">
                <form>
                    <div class="form-row align-items-end">
                        <div class="col-sm-3">
                            <label class="form-text">Pozo</label>
                            <InputSelect class="form-select" @bind-Value=registroFiltro.PozoId>
                                @foreach (var pozo in Pozos)
                                {
                                    <option value="@pozo.Id">@pozo.NombrePozo</option>
                                }

                            </InputSelect>
                        </div>
                        <div class="col-sm-3">
                            <label class="form-text">Variables de proceso</label>
                            <InputSelect class="form-select" @bind-Value=registroFiltro.VariableProcesoId>
                                @foreach (var v in Variables)
                                {
                                    <option value="@v.Id">@v.Nombre</option>
                                }

                            </InputSelect>
                        </div>
                        <div class="col-sm-3">
                            <label class="form-text">Fecha inicio</label>
                            <input type="date" class="form-control" />
                        </div>

                        <div class="col-sm-3">
                            <label class="form-text">Fecha fin</label>
                            <input type="date" class="form-control" />
                        </div>

                        <div class="col-sm-3">
                            <button class="btn btn-success">Ver</button>
                            <button class="btn btn-success" @onclick=consulta>Export as XLXS</button>
                            <button class="btn btn-warning">Export as PDF</button>
                        </div>

                    </div>


                    <div class="card-body">
                        <div class="col-12">
                            <div class="shadow-sm">
                                <div class="card-header">
                                    <h5>Registro por pozo y variables</h5>
                                </div>
                                <div class="card-body">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>Fecha</th>
                                                <th>Variable</th>
                                                <th>Medida</th>
                                                <th>unidad</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                         @foreach(var r in Registros)
                                            {
                                                if (registroFiltro.PozoId == r.PozoId)
                                                {
                                                <tr>
                                                    <td>@r.FechaHora</td>
                                                    <td>@r.VariableProceso.Nombre</td>
                                                    <td>@r.Medida</td>
                                                    <td>@r.VariableProceso.Unidad</td>
                                                </tr>
                                                }

                                               
                                            }  
                                        </tbody>
                                    </table>

                                </div>
                            </div>
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]

    public int? Id { get; set; }

    Registro registro = new Registro();
    Registro registroFiltro = new Registro();
    VariableProceso variable = new VariableProceso();

    Pozo pozo = new Pozo();


    public static List<VariableProceso> Variables = new List<VariableProceso>();

    public static List<Pozo> Pozos = new List<Pozo>();
    public static List<Registro> Registros = new List<Registro>();


    protected override async Task OnInitializedAsync()
    {
        var mivariable = await Http.GetFromJsonAsync<List<VariableProceso>>("api/VariableProceso");
        if (mivariable != null)
            Variables = mivariable;


        var mipozo = await Http.GetFromJsonAsync<List<Pozo>>("api/Pozo");
        if (mipozo != null)
            Pozos = mipozo;

        var miregistro = await Http.GetFromJsonAsync<List<Registro>>("api/Registro");
        if (miregistro != null)
            Registros = miregistro;
    }


    async Task EnviarRegistro()
    {
        await RegistroService.CreateRegistro(registro);

    }

    //Linq para traer los los registros por pozo y fecha y variable
    public void consulta()
    {
        string pathFile = @"C:\Users\Dagoberto\Downloads" + "miExcel.xlsx";
        SLDocument oSLDocument = new SLDocument();
        System.Data.DataTable dt = new System.Data.DataTable();
        //columnas
        dt.Columns.Add("Id", typeof(string));
        dt.Columns.Add("Fecha", typeof(string));
        dt.Columns.Add("Pozo", typeof(string));
        dt.Columns.Add("Variable", typeof(string));
        dt.Columns.Add("Medida", typeof(string));
        dt.Columns.Add("Unidad", typeof(string));


        //Registros Row
        dt.Rows.Add("1", "Noviembre", "ch", "presion", "150", "psi");

        //Matriz

        oSLDocument.ImportDataTable(1, 1, dt, true);
        oSLDocument.SaveAs(pathFile);
    }

    public void Export()
    {
        DataTable dt = new DataTable();
        dt.Columns.Add("Nombre");
        dt.Columns.Add("Telefono");
        dt.Columns.Add("Edad");

        DataRow dr = dt.NewRow();
        dr["Nombre"] = "Omar";
        dr["Telefono"] = "3142970790";
        dr["Edad"] = "29";

        DataRow dr2 = dt.NewRow();
        dr2["Nombre"] = "Andres";
        dr2["Telefono"] = "3142970790";
        dr2["Edad"] = "26";
        dt.Rows.Add(dr);
        dt.Rows.Add(dr2);

        using (XLWorkbook libro=new XLWorkbook())
        {
            var hoja = libro.Worksheets.Add(dt);
            hoja.ColumnsUsed().AdjustToContents();           
        }
    }
}
