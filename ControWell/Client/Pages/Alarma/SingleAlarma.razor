@page "/singlealarma"
@page "/singlealarma/{id:int}"
@using ControWell.Client.Services.AlarmaService;
@using ControWell.Client.Services.PozoService;
@using ControWell.Client.Services.VariableProcesoService;
@inject IAlarmaService AlarmaService
@inject IPozoService PozoService
@inject IVariableProcesoService VariableProcesoService
@inject HttpClient Http
@inject NavigationManager NanigationManager

<h3>CrearAlarma</h3>

<EditForm Model="alarma" OnSubmit="EnviarAlarma">
     <div>
        <label for="">Pozo</label>       
        <InputSelect @bind-Value="alarma.PozoId" class="form-select">
            @foreach (var pozo in Pozos)
            {
                <option value="@pozo.Id">@pozo.NombrePozo</option>
            }

        </InputSelect>


    </div>
     <div>
        <label for="">VariableProceso</label>
         <InputSelect @bind-Value="alarma.VariableProcesoId" class="form-select">
            @foreach(var variableProceso in Variables)
            {
                <option value="@variableProceso.Id">@variableProceso.Nombre en @variableProceso.Unidad</option>
            }

   </InputSelect>
    </div>
    <div>
        <label for="">Valor maximo</label>
        <InputNumber id="max" @bind-Value="alarma.Max" class="form-control"></InputNumber>
    </div>
    <div>
        <label for="">Valor minimo</label>
        <InputNumber id="max" @bind-Value="alarma.Min" class="form-control"></InputNumber>
    </div>
    <div>
        <InputSelect @bind-Value=alarma.Habilitado>
  
           <option value="1">Activar</option>
            <option value="0">Desactivar</option>
  
        </InputSelect>
            
       
    </div>
<br />

    <button type="button" class="btn btn-primary" @onclick="UpdateAlarma">Actualizar</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteAlarma">Eliminar</button>
    <button class="btn btn-outline-warning" @onclick="VolverAnterior">Volver</button>
    <br />
    <br />
</EditForm>


@code {
    [Parameter]

    public int? Id { get; set; }

    Alarma alarma = new Alarma();

    Pozo pozo = new Pozo();

    VariableProceso variable = new VariableProceso();


    public static List<VariableProceso> Variables = new List<VariableProceso>();

    public static List<Pozo> Pozos = new List<Pozo>();

    protected override async Task OnInitializedAsync()
    {
        var resultado = await Http.GetFromJsonAsync<List<VariableProceso>>("api/VariableProceso");
        if (resultado != null)
            Variables = resultado;


        var resultad = await Http.GetFromJsonAsync<List<Pozo>>("api/Pozo");
        if (resultad != null)
            Pozos = resultad;
    }



    async Task EnviarAlarma()
    {
        await AlarmaService.UpdateAlarma(alarma);

    }

    void VolverAnterior()
    {
        NanigationManager.NavigateTo("/alarmalist");
    }


    protected override async Task OnParametersSetAsync()
    {

        alarma = await AlarmaService.GetSingleAlarma((int)Id);
    }

    async Task DeleteAlarma()
    {
        await AlarmaService.DeleteAlarma(alarma.Id);
    }

    async Task UpdateAlarma()
    {
        await AlarmaService.UpdateAlarma(alarma);
    }


}
